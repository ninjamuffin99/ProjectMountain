// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Stump
#include <Stump.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dbf85262633d9da7_14_new,"Stump","new",0x80f2f569,"Stump.new","Stump.hx",14,0x37ae6a27)

void Stump_obj::__construct( ::Dynamic __o_X, ::Dynamic __o_Y, ::Dynamic SimpleGraphic){
 ::Dynamic X = __o_X.Default(0);
 ::Dynamic Y = __o_Y.Default(0);
            	HX_STACKFRAME(&_hx_pos_dbf85262633d9da7_14_new)
HXLINE(  15)		super::__construct(X,Y,null());
HXLINE(  17)		this->makeGraphic((int)70,(int)70,null(),null(),null());
HXLINE(  18)		this->set_immovable(true);
            	}

Dynamic Stump_obj::__CreateEmpty() { return new Stump_obj; }

void *Stump_obj::_hx_vtable = 0;

Dynamic Stump_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Stump_obj > _hx_result = new Stump_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Stump_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x17480cf7) {
		if (inClassId<=(int)0x0b6ffd77) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
		} else {
			return inClassId==(int)0x17480cf7;
		}
	} else {
		return inClassId==(int)0x25a685e0 || inClassId==(int)0x2e105115;
	}
}


hx::ObjectPtr< Stump_obj > Stump_obj::__new( ::Dynamic __o_X, ::Dynamic __o_Y, ::Dynamic SimpleGraphic) {
	hx::ObjectPtr< Stump_obj > __this = new Stump_obj();
	__this->__construct(__o_X,__o_Y,SimpleGraphic);
	return __this;
}

hx::ObjectPtr< Stump_obj > Stump_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic __o_X, ::Dynamic __o_Y, ::Dynamic SimpleGraphic) {
	Stump_obj *__this = (Stump_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Stump_obj), true, "Stump"));
	*(void **)__this = Stump_obj::_hx_vtable;
	__this->__construct(__o_X,__o_Y,SimpleGraphic);
	return __this;
}

Stump_obj::Stump_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Stump_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Stump_obj_sStaticStorageInfo = 0;
#endif

static void Stump_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Stump_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Stump_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Stump_obj::__mClass,"__mClass");
};

#endif

hx::Class Stump_obj::__mClass;

void Stump_obj::__register()
{
	hx::Object *dummy = new Stump_obj;
	Stump_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Stump","\xf7","\x0c","\x48","\x17");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Stump_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Stump_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Stump_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Stump_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Stump_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

