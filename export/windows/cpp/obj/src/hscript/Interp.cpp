// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_IntIterator
#include <IntIterator.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_hscript_CType
#include <hscript/CType.h>
#endif
#ifndef INCLUDED_hscript_Const
#include <hscript/Const.h>
#endif
#ifndef INCLUDED_hscript_Error
#include <hscript/Error.h>
#endif
#ifndef INCLUDED_hscript_Expr
#include <hscript/Expr.h>
#endif
#ifndef INCLUDED_hscript_Interp
#include <hscript/Interp.h>
#endif
#ifndef INCLUDED_hscript__Interp_Stop
#include <hscript/_Interp/Stop.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f37559d470356c9e_66_new,"hscript.Interp","new",0xf7e71101,"hscript.Interp.new","hscript/Interp.hx",66,0xf078416e)
HX_DEFINE_STACK_FRAME(_hx_pos_f37559d470356c9e_54_new,"hscript.Interp","new",0xf7e71101,"hscript.Interp.new","hscript/Interp.hx",54,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_77_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",77,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_78_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",78,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_79_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",79,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_80_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",80,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_81_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",81,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_82_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",82,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_83_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",83,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_84_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",84,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_85_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",85,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_86_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",86,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_87_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",87,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_88_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",88,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_89_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",89,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_90_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",90,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_91_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",91,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_92_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",92,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_93_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",93,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_94_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",94,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_95_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",95,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_97_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",97,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_98_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",98,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_99_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",99,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_100_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",100,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_101_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",101,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_102_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",102,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_103_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",103,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_104_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",104,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_105_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",105,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_106_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",106,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_107_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",107,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_108_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",108,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_70_initOps,"hscript.Interp","initOps",0xe1420823,"hscript.Interp.initOps","hscript/Interp.hx",70,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_111_assign,"hscript.Interp","assign",0xca66602e,"hscript.Interp.assign","hscript/Interp.hx",111,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_132_assignOp,"hscript.Interp","assignOp",0xf8e18cef,"hscript.Interp.assignOp","hscript/Interp.hx",132,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_130_assignOp,"hscript.Interp","assignOp",0xf8e18cef,"hscript.Interp.assignOp","hscript/Interp.hx",130,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_135_evalAssignOp,"hscript.Interp","evalAssignOp",0xa46efc2b,"hscript.Interp.evalAssignOp","hscript/Interp.hx",135,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_165_increment,"hscript.Interp","increment",0x1e81f590,"hscript.Interp.increment","hscript/Interp.hx",165,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_199_execute,"hscript.Interp","execute",0xe1c3af56,"hscript.Interp.execute","hscript/Interp.hx",199,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_211_exprReturn,"hscript.Interp","exprReturn",0x8cfbf144,"hscript.Interp.exprReturn","hscript/Interp.hx",211,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_223_duplicate,"hscript.Interp","duplicate",0x8d9a10ec,"hscript.Interp.duplicate","hscript/Interp.hx",223,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_235_restore,"hscript.Interp","restore",0x80670c6f,"hscript.Interp.restore","hscript/Interp.hx",235,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_245_edef,"hscript.Interp","edef",0xec5412bf,"hscript.Interp.edef","hscript/Interp.hx",245,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_253_error,"hscript.Interp","error",0xe68736a9,"hscript.Interp.error","hscript/Interp.hx",253,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_258_resolve,"hscript.Interp","resolve",0x7d16b80d,"hscript.Interp.resolve","hscript/Interp.hx",258,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_268_expr,"hscript.Interp","expr",0xec634974,"hscript.Interp.expr","hscript/Interp.hx",268,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_359_expr,"hscript.Interp","expr",0xec634974,"hscript.Interp.expr","hscript/Interp.hx",359,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_484_whileLoop,"hscript.Interp","whileLoop",0xce1b3216,"hscript.Interp.whileLoop","hscript/Interp.hx",484,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_500_makeIterator,"hscript.Interp","makeIterator",0x634d013b,"hscript.Interp.makeIterator","hscript/Interp.hx",500,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_510_forLoop,"hscript.Interp","forLoop",0xdf1ff72e,"hscript.Interp.forLoop","hscript/Interp.hx",510,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_529_get,"hscript.Interp","get",0xf7e1c137,"hscript.Interp.get","hscript/Interp.hx",529,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_543_set,"hscript.Interp","set",0xf7eadc43,"hscript.Interp.set","hscript/Interp.hx",543,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_550_fcall,"hscript.Interp","fcall",0x6ff6aee5,"hscript.Interp.fcall","hscript/Interp.hx",550,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_554_call,"hscript.Interp","call",0xeaff64dd,"hscript.Interp.call","hscript/Interp.hx",554,0xf078416e)
HX_LOCAL_STACK_FRAME(_hx_pos_f37559d470356c9e_557_cnew,"hscript.Interp","cnew",0xeb093c1c,"hscript.Interp.cnew","hscript/Interp.hx",557,0xf078416e)
namespace hscript{

void Interp_obj::__construct(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run( ::Dynamic e){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_66_new)
HXLINE(  66)			 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  66)			::String _hx_tmp1 = ::Std_obj::string(e);
HXDLIN(  66)			_hx_tmp(_hx_tmp1, ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("fileName",e7,5a,43,62),HX_("hscript",73,8c,18,2c))
            				->setFixed(1,HX_("lineNumber",dd,81,22,76),(int)0)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_54_new)
HXLINE(  56)		this->variables =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  57)		this->locals =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  62)		this->declared = ::Array_obj< ::Dynamic>::__new();
HXLINE(  63)		this->variables->set(HX_("null",87,9e,0e,49),null());
HXLINE(  64)		this->variables->set(HX_("true",4e,a7,03,4d),true);
HXLINE(  65)		this->variables->set(HX_("false",a3,35,4f,fb),false);
HXLINE(  66)		this->variables->set(HX_("trace",85,8e,1f,16), ::Dynamic(new _hx_Closure_0()));
HXLINE(  67)		this->initOps();
            	}

Dynamic Interp_obj::__CreateEmpty() { return new Interp_obj; }

void *Interp_obj::_hx_vtable = 0;

Dynamic Interp_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Interp_obj > _hx_result = new Interp_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Interp_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x005c6827;
}

void Interp_obj::initOps(){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::hscript::Interp,me) HXARGC(2)
            		 ::Dynamic _hx_run( ::hscript::Expr e1, ::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_77_initOps)
HXLINE(  77)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN(  77)			return (_hx_tmp + me->expr(e2));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::hscript::Expr e11, ::hscript::Expr e21){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_78_initOps)
HXLINE(  78)			 ::Dynamic _hx_tmp1 = me->expr(e11);
HXDLIN(  78)			return (_hx_tmp1 - me->expr(e21));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_2, ::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::hscript::Expr e12, ::hscript::Expr e22){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_79_initOps)
HXLINE(  79)			 ::Dynamic _hx_tmp2 = me->expr(e12);
HXDLIN(  79)			return (_hx_tmp2 * me->expr(e22));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_3, ::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::hscript::Expr e13, ::hscript::Expr e23){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_80_initOps)
HXLINE(  80)			 ::Dynamic _hx_tmp3 = me->expr(e13);
HXDLIN(  80)			return ((Float)_hx_tmp3 / (Float)me->expr(e23));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_4, ::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::hscript::Expr e14, ::hscript::Expr e24){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_81_initOps)
HXLINE(  81)			 ::Dynamic _hx_tmp4 = me->expr(e14);
HXDLIN(  81)			return hx::Mod(_hx_tmp4,me->expr(e24));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_5, ::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::hscript::Expr e15, ::hscript::Expr e25){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_82_initOps)
HXLINE(  82)			 ::Dynamic _hx_tmp5 = me->expr(e15);
HXDLIN(  82)			return ((int)_hx_tmp5 & (int)me->expr(e25));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_6, ::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::hscript::Expr e16, ::hscript::Expr e26){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_83_initOps)
HXLINE(  83)			 ::Dynamic _hx_tmp6 = me->expr(e16);
HXDLIN(  83)			return ((int)_hx_tmp6 | (int)me->expr(e26));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_7, ::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::hscript::Expr e17, ::hscript::Expr e27){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_84_initOps)
HXLINE(  84)			 ::Dynamic _hx_tmp7 = me->expr(e17);
HXDLIN(  84)			return ((int)_hx_tmp7 ^ (int)me->expr(e27));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_8, ::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::hscript::Expr e18, ::hscript::Expr e28){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_85_initOps)
HXLINE(  85)			 ::Dynamic _hx_tmp8 = me->expr(e18);
HXDLIN(  85)			return ((int)_hx_tmp8 << (int)me->expr(e28));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_9, ::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::hscript::Expr e19, ::hscript::Expr e29){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_86_initOps)
HXLINE(  86)			 ::Dynamic _hx_tmp9 = me->expr(e19);
HXDLIN(  86)			return ((int)_hx_tmp9 >> (int)me->expr(e29));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_10, ::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::hscript::Expr e110, ::hscript::Expr e210){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_87_initOps)
HXLINE(  87)			 ::Dynamic _hx_tmp10 = me->expr(e110);
HXDLIN(  87)			return hx::UShr(_hx_tmp10,me->expr(e210));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_11, ::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::hscript::Expr e111, ::hscript::Expr e211){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_88_initOps)
HXLINE(  88)			 ::Dynamic _hx_tmp11 = me->expr(e111);
HXDLIN(  88)			return hx::IsEq( _hx_tmp11,me->expr(e211) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_12, ::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::hscript::Expr e112, ::hscript::Expr e212){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_89_initOps)
HXLINE(  89)			 ::Dynamic _hx_tmp12 = me->expr(e112);
HXDLIN(  89)			return hx::IsNotEq( _hx_tmp12,me->expr(e212) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_13, ::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::hscript::Expr e113, ::hscript::Expr e213){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_90_initOps)
HXLINE(  90)			 ::Dynamic _hx_tmp13 = me->expr(e113);
HXDLIN(  90)			return hx::IsGreaterEq( _hx_tmp13,me->expr(e213) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_14, ::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::hscript::Expr e114, ::hscript::Expr e214){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_91_initOps)
HXLINE(  91)			 ::Dynamic _hx_tmp14 = me->expr(e114);
HXDLIN(  91)			return hx::IsLessEq( _hx_tmp14,me->expr(e214) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_15, ::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::hscript::Expr e115, ::hscript::Expr e215){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_92_initOps)
HXLINE(  92)			 ::Dynamic _hx_tmp15 = me->expr(e115);
HXDLIN(  92)			return hx::IsGreater( _hx_tmp15,me->expr(e215) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_16, ::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::hscript::Expr e116, ::hscript::Expr e216){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_93_initOps)
HXLINE(  93)			 ::Dynamic _hx_tmp16 = me->expr(e116);
HXDLIN(  93)			return hx::IsLess( _hx_tmp16,me->expr(e216) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_17, ::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::hscript::Expr e117, ::hscript::Expr e217){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_94_initOps)
HXLINE(  94)			if (hx::IsNotEq( me->expr(e117),true )) {
HXLINE(  94)				return hx::IsEq( me->expr(e217),true );
            			}
            			else {
HXLINE(  94)				return true;
            			}
HXDLIN(  94)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_18, ::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::hscript::Expr e118, ::hscript::Expr e218){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_95_initOps)
HXLINE(  95)			if (hx::IsEq( me->expr(e118),true )) {
HXLINE(  95)				return hx::IsEq( me->expr(e218),true );
            			}
            			else {
HXLINE(  95)				return false;
            			}
HXDLIN(  95)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_19, ::hscript::Interp,me) HXARGC(2)
            		 ::IntIterator _hx_run( ::hscript::Expr e119, ::hscript::Expr e219){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_97_initOps)
HXLINE(  97)			 ::Dynamic _hx_tmp17 = me->expr(e119);
HXDLIN(  97)			return  ::IntIterator_obj::__alloc( HX_CTX ,_hx_tmp17,me->expr(e219));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_20) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic v1, ::Dynamic v2){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_98_initOps)
HXLINE(  98)			return (v1 + v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_21) HXARGC(2)
            		Float _hx_run(Float v11,Float v21){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_99_initOps)
HXLINE(  99)			return (v11 - v21);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_22) HXARGC(2)
            		Float _hx_run(Float v12,Float v22){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_100_initOps)
HXLINE( 100)			return (v12 * v22);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_23) HXARGC(2)
            		Float _hx_run(Float v13,Float v23){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_101_initOps)
HXLINE( 101)			return ((Float)v13 / (Float)v23);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_24) HXARGC(2)
            		Float _hx_run(Float v14,Float v24){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_102_initOps)
HXLINE( 102)			return hx::Mod(v14,v24);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_25) HXARGC(2)
            		int _hx_run(int v15,int v25){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_103_initOps)
HXLINE( 103)			return ((int)v15 & (int)v25);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_26) HXARGC(2)
            		int _hx_run(int v16,int v26){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_104_initOps)
HXLINE( 104)			return ((int)v16 | (int)v26);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_27) HXARGC(2)
            		int _hx_run(int v17,int v27){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_105_initOps)
HXLINE( 105)			return ((int)v17 ^ (int)v27);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_28) HXARGC(2)
            		int _hx_run(int v18,int v28){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_106_initOps)
HXLINE( 106)			return ((int)v18 << (int)v28);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_29) HXARGC(2)
            		int _hx_run(int v19,int v29){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_107_initOps)
HXLINE( 107)			return ((int)v19 >> (int)v29);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_30) HXARGC(2)
            		int _hx_run(int v110,int v210){
            			HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_108_initOps)
HXLINE( 108)			return hx::UShr(v110,v210);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_70_initOps)
HXLINE(  71)		 ::hscript::Interp me = hx::ObjectPtr<OBJ_>(this);
HXLINE(  73)		this->binops =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  77)		this->binops->set(HX_("+",2b,00,00,00), ::Dynamic(new _hx_Closure_0(me)));
HXLINE(  78)		this->binops->set(HX_("-",2d,00,00,00), ::Dynamic(new _hx_Closure_1(me)));
HXLINE(  79)		this->binops->set(HX_("*",2a,00,00,00), ::Dynamic(new _hx_Closure_2(me)));
HXLINE(  80)		this->binops->set(HX_("/",2f,00,00,00), ::Dynamic(new _hx_Closure_3(me)));
HXLINE(  81)		this->binops->set(HX_("%",25,00,00,00), ::Dynamic(new _hx_Closure_4(me)));
HXLINE(  82)		this->binops->set(HX_("&",26,00,00,00), ::Dynamic(new _hx_Closure_5(me)));
HXLINE(  83)		this->binops->set(HX_("|",7c,00,00,00), ::Dynamic(new _hx_Closure_6(me)));
HXLINE(  84)		this->binops->set(HX_("^",5e,00,00,00), ::Dynamic(new _hx_Closure_7(me)));
HXLINE(  85)		this->binops->set(HX_("<<",80,34,00,00), ::Dynamic(new _hx_Closure_8(me)));
HXLINE(  86)		this->binops->set(HX_(">>",40,36,00,00), ::Dynamic(new _hx_Closure_9(me)));
HXLINE(  87)		this->binops->set(HX_(">>>",fe,41,2f,00), ::Dynamic(new _hx_Closure_10(me)));
HXLINE(  88)		this->binops->set(HX_("==",60,35,00,00), ::Dynamic(new _hx_Closure_11(me)));
HXLINE(  89)		this->binops->set(HX_("!=",fc,1c,00,00), ::Dynamic(new _hx_Closure_12(me)));
HXLINE(  90)		this->binops->set(HX_(">=",3f,36,00,00), ::Dynamic(new _hx_Closure_13(me)));
HXLINE(  91)		this->binops->set(HX_("<=",81,34,00,00), ::Dynamic(new _hx_Closure_14(me)));
HXLINE(  92)		this->binops->set(HX_(">",3e,00,00,00), ::Dynamic(new _hx_Closure_15(me)));
HXLINE(  93)		this->binops->set(HX_("<",3c,00,00,00), ::Dynamic(new _hx_Closure_16(me)));
HXLINE(  94)		this->binops->set(HX_("||",80,6c,00,00), ::Dynamic(new _hx_Closure_17(me)));
HXLINE(  95)		this->binops->set(HX_("&&",40,21,00,00), ::Dynamic(new _hx_Closure_18(me)));
HXLINE(  96)		this->binops->set(HX_("=",3d,00,00,00),this->assign_dyn());
HXLINE(  97)		this->binops->set(HX_("...",ee,0f,23,00), ::Dynamic(new _hx_Closure_19(me)));
HXLINE(  98)		this->assignOp(HX_("+=",b2,25,00,00), ::Dynamic(new _hx_Closure_20()));
HXLINE(  99)		this->assignOp(HX_("-=",70,27,00,00), ::Dynamic(new _hx_Closure_21()));
HXLINE( 100)		this->assignOp(HX_("*=",d3,24,00,00), ::Dynamic(new _hx_Closure_22()));
HXLINE( 101)		this->assignOp(HX_("/=",2e,29,00,00), ::Dynamic(new _hx_Closure_23()));
HXLINE( 102)		this->assignOp(HX_("%=",78,20,00,00), ::Dynamic(new _hx_Closure_24()));
HXLINE( 103)		this->assignOp(HX_("&=",57,21,00,00), ::Dynamic(new _hx_Closure_25()));
HXLINE( 104)		this->assignOp(HX_("|=",41,6c,00,00), ::Dynamic(new _hx_Closure_26()));
HXLINE( 105)		this->assignOp(HX_("^=",1f,52,00,00), ::Dynamic(new _hx_Closure_27()));
HXLINE( 106)		this->assignOp(HX_("<<=",bd,bb,2d,00), ::Dynamic(new _hx_Closure_28()));
HXLINE( 107)		this->assignOp(HX_(">>=",fd,41,2f,00), ::Dynamic(new _hx_Closure_29()));
HXLINE( 108)		this->assignOp(HX_(">>>=",7f,7c,2a,29), ::Dynamic(new _hx_Closure_30()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interp_obj,initOps,(void))

 ::Dynamic Interp_obj::assign( ::hscript::Expr e1, ::hscript::Expr e2){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_111_assign)
HXLINE( 112)		 ::Dynamic v = this->expr(e2);
HXLINE( 113)		switch((int)(_hx_getEnumValueIndex(e1))){
            			case (int)1: {
HXLINE( 114)				::String id = e1->_hx_getString(0);
HXDLIN( 114)				{
HXLINE( 115)					 ::Dynamic l = ::haxe::IMap_obj::get(this->locals,id);
HXLINE( 116)					if (hx::IsNull( l )) {
HXLINE( 117)						::haxe::IMap_obj::set(this->variables,id,v);
            					}
            					else {
HXLINE( 119)						l->__SetField(HX_("r",72,00,00,00),v,hx::paccDynamic);
            					}
            				}
            			}
            			break;
            			case (int)5: {
HXLINE( 120)				::String f = e1->_hx_getString(1);
HXDLIN( 120)				 ::hscript::Expr e = e1->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 121)				v = this->set(this->expr(e),f,v);
            			}
            			break;
            			case (int)16: {
HXLINE( 122)				 ::hscript::Expr index = e1->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 122)				 ::hscript::Expr e3 = e1->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 123)				 ::Dynamic _hx_tmp = this->expr(e3);
HXDLIN( 123)				_hx_tmp->__SetItem(( (int)(this->expr(index)) ),v);
            			}
            			break;
            			default:{
HXLINE( 125)				HX_STACK_DO_THROW(::hscript::Error_obj::EInvalidOp(HX_("=",3d,00,00,00)));
            			}
            		}
HXLINE( 127)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,assign,return )

void Interp_obj::assignOp(::String op, ::Dynamic fop){
            		HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_0,::String,op, ::hscript::Interp,me, ::Dynamic,fop) HXARGC(2)
            		 ::Dynamic _hx_run( ::hscript::Expr e1, ::hscript::Expr e2){
            			HX_STACKFRAME(&_hx_pos_f37559d470356c9e_132_assignOp)
HXLINE( 132)			return me->evalAssignOp(op,fop,e1,e2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_130_assignOp)
HXLINE( 131)		 ::hscript::Interp me = hx::ObjectPtr<OBJ_>(this);
HXLINE( 132)		this->binops->set(op, ::Dynamic(new _hx_Closure_0(op,me,fop)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,assignOp,(void))

 ::Dynamic Interp_obj::evalAssignOp(::String op, ::Dynamic fop, ::hscript::Expr e1, ::hscript::Expr e2){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_135_evalAssignOp)
HXLINE( 136)		 ::Dynamic v;
HXLINE( 137)		switch((int)(_hx_getEnumValueIndex(e1))){
            			case (int)1: {
HXLINE( 138)				::String id = e1->_hx_getString(0);
HXDLIN( 138)				{
HXLINE( 139)					 ::Dynamic l = ::haxe::IMap_obj::get(this->locals,id);
HXLINE( 140)					 ::Dynamic v1 = this->expr(e1);
HXDLIN( 140)					v = fop(v1,this->expr(e2));
HXLINE( 141)					if (hx::IsNull( l )) {
HXLINE( 142)						::haxe::IMap_obj::set(this->variables,id,v);
            					}
            					else {
HXLINE( 144)						l->__SetField(HX_("r",72,00,00,00),v,hx::paccDynamic);
            					}
            				}
            			}
            			break;
            			case (int)5: {
HXLINE( 145)				::String f = e1->_hx_getString(1);
HXDLIN( 145)				 ::hscript::Expr e = e1->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXDLIN( 145)				{
HXLINE( 146)					 ::Dynamic obj = this->expr(e);
HXLINE( 147)					 ::Dynamic v2 = this->get(obj,f);
HXDLIN( 147)					v = fop(v2,this->expr(e2));
HXLINE( 148)					v = this->set(obj,f,v);
            				}
            			}
            			break;
            			case (int)16: {
HXLINE( 149)				 ::hscript::Expr index = e1->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 149)				 ::hscript::Expr e3 = e1->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXDLIN( 149)				{
HXLINE( 150)					::cpp::VirtualArray arr = ( (::cpp::VirtualArray)(this->expr(e3)) );
HXLINE( 151)					int index1 = ( (int)(this->expr(index)) );
HXLINE( 152)					 ::Dynamic arr1 = arr->__get(index1);
HXDLIN( 152)					v = fop(arr1,this->expr(e2));
HXLINE( 153)					arr->set(index1,v);
            				}
            			}
            			break;
            			default:{
HXLINE( 155)				HX_STACK_DO_THROW(::hscript::Error_obj::EInvalidOp(op));
            			}
            		}
HXLINE( 157)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC4(Interp_obj,evalAssignOp,return )

 ::Dynamic Interp_obj::increment( ::hscript::Expr e,bool prefix,int delta){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_165_increment)
HXLINE( 165)		switch((int)(_hx_getEnumValueIndex(e))){
            			case (int)1: {
HXLINE( 166)				::String id = e->_hx_getString(0);
HXLINE( 167)				 ::Dynamic l = ::haxe::IMap_obj::get(this->locals,id);
HXLINE( 168)				 ::Dynamic v;
HXDLIN( 168)				if (hx::IsNull( l )) {
HXLINE( 168)					v = ::haxe::IMap_obj::get(this->variables,id);
            				}
            				else {
HXLINE( 168)					v =  ::Dynamic(l->__Field(HX_("r",72,00,00,00),hx::paccDynamic));
            				}
HXLINE( 169)				if (prefix) {
HXLINE( 170)					v = (v + delta);
HXLINE( 171)					if (hx::IsNull( l )) {
HXLINE( 171)						::haxe::IMap_obj::set(this->variables,id,v);
            					}
            					else {
HXLINE( 171)						l->__SetField(HX_("r",72,00,00,00),v,hx::paccDynamic);
            					}
            				}
            				else {
HXLINE( 173)					if (hx::IsNull( l )) {
HXLINE( 173)						::haxe::IMap_obj::set(this->variables,id,(v + delta));
            					}
            					else {
HXLINE( 173)						l->__SetField(HX_("r",72,00,00,00),(v + delta),hx::paccDynamic);
            					}
            				}
HXLINE( 174)				return v;
            			}
            			break;
            			case (int)5: {
HXLINE( 175)				::String f = e->_hx_getString(1);
HXDLIN( 175)				 ::hscript::Expr e1 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 176)				 ::Dynamic obj = this->expr(e1);
HXLINE( 177)				 ::Dynamic v1 = this->get(obj,f);
HXLINE( 178)				if (prefix) {
HXLINE( 179)					v1 = (v1 + delta);
HXLINE( 180)					this->set(obj,f,v1);
            				}
            				else {
HXLINE( 182)					this->set(obj,f,(v1 + delta));
            				}
HXLINE( 183)				return v1;
            			}
            			break;
            			case (int)16: {
HXLINE( 184)				 ::hscript::Expr index = e->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 184)				 ::hscript::Expr e2 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 185)				::Array< int > arr = ( (::Array< int >)(this->expr(e2)) );
HXLINE( 186)				int index1 = ( (int)(this->expr(index)) );
HXLINE( 187)				int v2 = arr->__get(index1);
HXLINE( 188)				if (prefix) {
HXLINE( 189)					v2 = (v2 + delta);
HXLINE( 190)					arr[index1] = v2;
            				}
            				else {
HXLINE( 192)					arr[index1] = (v2 + delta);
            				}
HXLINE( 193)				return v2;
            			}
            			break;
            			default:{
HXLINE( 195)				::String e3;
HXDLIN( 195)				if ((delta > (int)0)) {
HXLINE( 195)					e3 = HX_("++",a0,25,00,00);
            				}
            				else {
HXLINE( 195)					e3 = HX_("--",60,27,00,00);
            				}
HXDLIN( 195)				HX_STACK_DO_THROW(::hscript::Error_obj::EInvalidOp(e3));
            			}
            		}
HXLINE( 165)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,increment,return )

 ::Dynamic Interp_obj::execute( ::hscript::Expr expr){
            	HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_199_execute)
HXLINE( 200)		this->depth = (int)0;
HXLINE( 202)		this->locals =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 206)		this->declared = ::Array_obj< ::Dynamic>::__new();
HXLINE( 207)		return this->exprReturn(expr);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,execute,return )

 ::Dynamic Interp_obj::exprReturn( ::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_211_exprReturn)
HXLINE( 211)		try {
            			HX_STACK_CATCHABLE( ::hscript::_Interp::Stop, 0);
HXLINE( 212)			return this->expr(e);
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::hscript::_Interp::Stop >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::hscript::_Interp::Stop e1 = _hx_e;
HXLINE( 214)				switch((int)(_hx_getEnumValueIndex(e1))){
            					case (int)0: {
HXLINE( 215)						HX_STACK_DO_THROW(HX_("Invalid break",b6,ee,24,9d));
            					}
            					break;
            					case (int)1: {
HXLINE( 216)						HX_STACK_DO_THROW(HX_("Invalid continue",d0,6a,b7,3f));
            					}
            					break;
            					case (int)2: {
HXLINE( 217)						 ::Dynamic v = e1->_hx_getObject(0);
HXDLIN( 217)						return v;
            					}
            					break;
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 211)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,exprReturn,return )

 ::haxe::ds::StringMap Interp_obj::duplicate( ::haxe::ds::StringMap h){
            	HX_GC_STACKFRAME(&_hx_pos_f37559d470356c9e_223_duplicate)
HXLINE( 225)		 ::haxe::ds::StringMap h2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 229)		{
HXLINE( 229)			 ::Dynamic k = h->keys();
HXDLIN( 229)			while(( (bool)(k->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 229)				::String k1 = ( (::String)(k->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 230)				h2->set(k1,h->get(k1));
            			}
            		}
HXLINE( 231)		return h2;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,duplicate,return )

void Interp_obj::restore(int old){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_235_restore)
HXLINE( 235)		while((this->declared->length > old)){
HXLINE( 236)			 ::Dynamic d = this->declared->pop();
HXLINE( 237)			this->locals->set(( (::String)(d->__Field(HX_("n",6e,00,00,00),hx::paccDynamic)) ), ::Dynamic(d->__Field(HX_("old",a7,98,54,00),hx::paccDynamic)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,restore,(void))

 ::hscript::Expr Interp_obj::edef( ::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_245_edef)
HXLINE( 245)		return e;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,edef,return )

 ::Dynamic Interp_obj::error( ::hscript::Error e){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_253_error)
HXLINE( 253)		HX_STACK_DO_THROW(e);
HXDLIN( 253)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,error,return )

 ::Dynamic Interp_obj::resolve(::String id){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_258_resolve)
HXLINE( 259)		 ::Dynamic l = this->locals->get(id);
HXLINE( 260)		if (hx::IsNotNull( l )) {
HXLINE( 261)			return  ::Dynamic(l->__Field(HX_("r",72,00,00,00),hx::paccDynamic));
            		}
HXLINE( 262)		 ::Dynamic v = this->variables->get(id);
HXLINE( 263)		bool _hx_tmp;
HXDLIN( 263)		if (hx::IsNull( v )) {
HXLINE( 263)			_hx_tmp = !(this->variables->exists(id));
            		}
            		else {
HXLINE( 263)			_hx_tmp = false;
            		}
HXDLIN( 263)		if (_hx_tmp) {
HXLINE( 264)			HX_STACK_DO_THROW(::hscript::Error_obj::EUnknownVariable(id));
            		}
HXLINE( 265)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,resolve,return )

 ::Dynamic Interp_obj::expr( ::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_268_expr)
HXLINE( 268)		 ::hscript::Interp _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 273)		switch((int)(_hx_getEnumValueIndex(e))){
            			case (int)0: {
HXLINE( 274)				 ::hscript::Const c = e->_hx_getObject(0).StaticCast<  ::hscript::Const >();
HXLINE( 275)				switch((int)(_hx_getEnumValueIndex(c))){
            					case (int)0: {
HXLINE( 276)						int v = c->_hx_getInt(0);
HXDLIN( 276)						return v;
            					}
            					break;
            					case (int)1: {
HXLINE( 277)						Float f = c->_hx_getFloat(0);
HXDLIN( 277)						return f;
            					}
            					break;
            					case (int)2: {
HXLINE( 278)						::String s = c->_hx_getString(0);
HXDLIN( 278)						return s;
            					}
            					break;
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 283)				::String id = e->_hx_getString(0);
HXLINE( 284)				return this->resolve(id);
            			}
            			break;
            			case (int)2: {
HXLINE( 285)				 ::hscript::Expr e1 = e->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
HXDLIN( 285)				::String n = e->_hx_getString(0);
HXLINE( 286)				::Array< ::Dynamic> _hx_tmp = this->declared;
HXDLIN( 286)				_hx_tmp->push( ::Dynamic(hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("n",6e,00,00,00),n)
            					->setFixed(1,HX_("old",a7,98,54,00),::haxe::IMap_obj::get(this->locals,n))));
HXLINE( 287)				{
HXLINE( 287)					::Dynamic this1 = this->locals;
HXDLIN( 287)					 ::Dynamic value;
HXDLIN( 287)					if (hx::IsNull( e1 )) {
HXLINE( 287)						value = null();
            					}
            					else {
HXLINE( 287)						value = this->expr(e1);
            					}
HXDLIN( 287)					::haxe::IMap_obj::set(this1,n, ::Dynamic(hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("r",72,00,00,00),value)));
            				}
HXLINE( 288)				return null();
            			}
            			break;
            			case (int)3: {
HXLINE( 289)				 ::hscript::Expr e2 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 290)				return this->expr(e2);
            			}
            			break;
            			case (int)4: {
HXLINE( 291)				::Array< ::Dynamic> exprs = e->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 292)				int old = this->declared->length;
HXLINE( 293)				 ::Dynamic v1 = null();
HXLINE( 294)				{
HXLINE( 294)					int _g = (int)0;
HXDLIN( 294)					while((_g < exprs->length)){
HXLINE( 294)						 ::hscript::Expr e3 = exprs->__get(_g).StaticCast<  ::hscript::Expr >();
HXDLIN( 294)						_g = (_g + (int)1);
HXLINE( 295)						v1 = this->expr(e3);
            					}
            				}
HXLINE( 296)				this->restore(old);
HXLINE( 297)				return v1;
            			}
            			break;
            			case (int)5: {
HXLINE( 298)				::String f1 = e->_hx_getString(1);
HXDLIN( 298)				 ::hscript::Expr e4 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 299)				return this->get(this->expr(e4),f1);
            			}
            			break;
            			case (int)6: {
HXLINE( 300)				 ::hscript::Expr e21 = e->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
HXDLIN( 300)				 ::hscript::Expr e11 = e->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 300)				::String op = e->_hx_getString(0);
HXLINE( 301)				 ::Dynamic fop = ::haxe::IMap_obj::get(this->binops,op);
HXLINE( 302)				if (hx::IsNull( fop )) {
HXLINE( 302)					HX_STACK_DO_THROW(::hscript::Error_obj::EInvalidOp(op));
            				}
HXLINE( 303)				return fop(e11,e21);
            			}
            			break;
            			case (int)7: {
HXLINE( 304)				 ::hscript::Expr e5 = e->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
HXDLIN( 304)				bool prefix = e->_hx_getBool(1);
HXDLIN( 304)				::String op1 = e->_hx_getString(0);
HXLINE( 305)				::String _hx_switch_0 = op1;
            				if (  (_hx_switch_0==HX_("!",21,00,00,00)) ){
HXLINE( 307)					return hx::IsNotEq( this->expr(e5),true );
HXDLIN( 307)					goto _hx_goto_49;
            				}
            				if (  (_hx_switch_0==HX_("++",a0,25,00,00)) ){
HXLINE( 311)					return this->increment(e5,prefix,(int)1);
HXDLIN( 311)					goto _hx_goto_49;
            				}
            				if (  (_hx_switch_0==HX_("-",2d,00,00,00)) ){
HXLINE( 309)					return -(this->expr(e5));
HXDLIN( 309)					goto _hx_goto_49;
            				}
            				if (  (_hx_switch_0==HX_("--",60,27,00,00)) ){
HXLINE( 313)					return this->increment(e5,prefix,(int)-1);
HXDLIN( 313)					goto _hx_goto_49;
            				}
            				if (  (_hx_switch_0==HX_("~",7e,00,00,00)) ){
HXLINE( 318)					return ~(( (int)(this->expr(e5)) ));
HXDLIN( 318)					goto _hx_goto_49;
            				}
            				/* default */{
HXLINE( 321)					HX_STACK_DO_THROW(::hscript::Error_obj::EInvalidOp(op1));
            				}
            				_hx_goto_49:;
            			}
            			break;
            			case (int)8: {
HXLINE( 323)				::Array< ::Dynamic> params = e->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 323)				 ::hscript::Expr e6 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 324)				::cpp::VirtualArray args = ::cpp::VirtualArray_obj::__new();
HXLINE( 325)				{
HXLINE( 325)					int _g1 = (int)0;
HXDLIN( 325)					while((_g1 < params->length)){
HXLINE( 325)						 ::hscript::Expr p = params->__get(_g1).StaticCast<  ::hscript::Expr >();
HXDLIN( 325)						_g1 = (_g1 + (int)1);
HXLINE( 326)						args->push(this->expr(p));
            					}
            				}
HXLINE( 328)				if ((_hx_getEnumValueIndex(e6) == (int)5)) {
HXLINE( 329)					::String f2 = e6->_hx_getString(1);
HXDLIN( 329)					 ::hscript::Expr e7 = e6->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 330)					 ::Dynamic obj = this->expr(e7);
HXLINE( 331)					if (hx::IsNull( obj )) {
HXLINE( 331)						HX_STACK_DO_THROW(::hscript::Error_obj::EInvalidAccess(f2));
            					}
HXLINE( 332)					return this->fcall(obj,f2,args);
            				}
            				else {
HXLINE( 334)					return this->call(null(),this->expr(e6),args);
            				}
            			}
            			break;
            			case (int)9: {
HXLINE( 336)				 ::hscript::Expr e22 = e->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
HXDLIN( 336)				 ::hscript::Expr e12 = e->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 336)				 ::hscript::Expr econd = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 337)				if (hx::IsEq( this->expr(econd),true )) {
HXLINE( 337)					return this->expr(e12);
            				}
            				else {
HXLINE( 337)					if (hx::IsNull( e22 )) {
HXLINE( 337)						return null();
            					}
            					else {
HXLINE( 337)						return this->expr(e22);
            					}
            				}
            			}
            			break;
            			case (int)10: {
HXLINE( 338)				 ::hscript::Expr e8 = e->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 338)				 ::hscript::Expr econd1 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 339)				this->whileLoop(econd1,e8);
HXLINE( 340)				return null();
            			}
            			break;
            			case (int)11: {
HXLINE( 341)				 ::hscript::Expr e9 = e->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
HXDLIN( 341)				 ::hscript::Expr it = e->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 341)				::String v2 = e->_hx_getString(0);
HXLINE( 342)				this->forLoop(v2,it,e9);
HXLINE( 343)				return null();
            			}
            			break;
            			case (int)12: {
HXLINE( 345)				HX_STACK_DO_THROW(::hscript::_Interp::Stop_obj::SBreak_dyn());
            			}
            			break;
            			case (int)13: {
HXLINE( 347)				HX_STACK_DO_THROW(::hscript::_Interp::Stop_obj::SContinue_dyn());
            			}
            			break;
            			case (int)14: {
            				HX_BEGIN_LOCAL_FUNC_S7(hx::LocalFunc,_hx_Closure_0,::String,name, ::hscript::Expr,fexpr, ::hscript::Interp,_gthis,int,minParams, ::hscript::Interp,me, ::haxe::ds::StringMap,capturedLocals,::Array< ::Dynamic>,params1) HXARGC(1)
            				 ::Dynamic _hx_run(::cpp::VirtualArray args1){
            					HX_STACKFRAME(&_hx_pos_f37559d470356c9e_359_expr)
HXLINE( 360)					if ((args1->get_length() != params1->length)) {
HXLINE( 361)						if ((args1->get_length() < minParams)) {
HXLINE( 362)							::String str = (((HX_("Invalid number of parameters. Got ",cb,2b,d9,b1) + args1->get_length()) + HX_(", required ",ed,0c,66,93)) + minParams);
HXLINE( 363)							if (hx::IsNotNull( name )) {
HXLINE( 363)								str = (str + ((HX_(" for function '",f6,90,ab,a0) + name) + HX_("'",27,00,00,00)));
            							}
HXLINE( 364)							HX_STACK_DO_THROW(str);
            						}
HXLINE( 367)						::cpp::VirtualArray args2 = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 368)						int extraParams = (args1->get_length() - minParams);
HXLINE( 369)						int pos = (int)0;
HXLINE( 370)						{
HXLINE( 370)							int _g3 = (int)0;
HXDLIN( 370)							while((_g3 < params1->length)){
HXLINE( 370)								 ::Dynamic p2 = params1->__get(_g3);
HXDLIN( 370)								_g3 = (_g3 + (int)1);
HXLINE( 371)								if (( (bool)(p2->__Field(HX_("opt",33,9c,54,00),hx::paccDynamic)) )) {
HXLINE( 372)									if ((extraParams > (int)0)) {
HXLINE( 373)										pos = (pos + (int)1);
HXDLIN( 373)										args2->push(args1->__get((pos - (int)1)));
HXLINE( 374)										extraParams = (extraParams - (int)1);
            									}
            									else {
HXLINE( 376)										args2->push(null());
            									}
            								}
            								else {
HXLINE( 378)									pos = (pos + (int)1);
HXDLIN( 378)									args2->push(args1->__get((pos - (int)1)));
            								}
            							}
            						}
HXLINE( 379)						args1 = args2;
            					}
HXLINE( 381)					 ::haxe::ds::StringMap old1 = me->locals;
HXDLIN( 381)					int depth = me->depth;
HXLINE( 382)					me->depth++;
HXLINE( 383)					me->locals = me->duplicate(capturedLocals);
HXLINE( 384)					{
HXLINE( 384)						int _g11 = (int)0;
HXDLIN( 384)						int _g4 = params1->length;
HXDLIN( 384)						while((_g11 < _g4)){
HXLINE( 384)							_g11 = (_g11 + (int)1);
HXDLIN( 384)							int i = (_g11 - (int)1);
HXLINE( 385)							::haxe::IMap_obj::set(me->locals, ::Dynamic(params1->__get(i)->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)), ::Dynamic(hx::Anon_obj::Create(1)
            								->setFixed(0,HX_("r",72,00,00,00),args1->__get(i))));
            						}
            					}
HXLINE( 386)					 ::Dynamic r = null();
HXLINE( 387)					if (_gthis->inTry) {
HXLINE( 388)						try {
            							HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 389)							r = me->exprReturn(fexpr);
            						}
            						catch( ::Dynamic _hx_e){
            							if (_hx_e.IsClass<  ::Dynamic >() ){
            								HX_STACK_BEGIN_CATCH
            								 ::Dynamic e10 = _hx_e;
HXLINE( 391)								me->locals = old1;
HXLINE( 392)								me->depth = depth;
HXLINE( 396)								HX_STACK_DO_THROW(e10);
            							}
            							else {
            								HX_STACK_DO_THROW(_hx_e);
            							}
            						}
            					}
            					else {
HXLINE( 400)						r = me->exprReturn(fexpr);
            					}
HXLINE( 401)					me->locals = old1;
HXLINE( 402)					me->depth = depth;
HXLINE( 403)					return r;
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE( 350)				::String name = e->_hx_getString(2);
HXDLIN( 350)				 ::hscript::Expr fexpr = e->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 350)				::Array< ::Dynamic> params1 = e->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 351)				 ::haxe::ds::StringMap capturedLocals = this->duplicate(this->locals);
HXLINE( 352)				 ::hscript::Interp me = hx::ObjectPtr<OBJ_>(this);
HXLINE( 353)				bool hasOpt = false;
HXDLIN( 353)				int minParams = (int)0;
HXLINE( 354)				{
HXLINE( 354)					int _g2 = (int)0;
HXDLIN( 354)					while((_g2 < params1->length)){
HXLINE( 354)						 ::Dynamic p1 = params1->__get(_g2);
HXDLIN( 354)						_g2 = (_g2 + (int)1);
HXLINE( 355)						if (( (bool)(p1->__Field(HX_("opt",33,9c,54,00),hx::paccDynamic)) )) {
HXLINE( 356)							hasOpt = true;
            						}
            						else {
HXLINE( 358)							minParams = (minParams + (int)1);
            						}
            					}
            				}
HXLINE( 359)				 ::Dynamic f3 =  ::Dynamic(new _hx_Closure_0(name,fexpr,_gthis,minParams,me,capturedLocals,params1));
HXLINE( 405)				 ::Dynamic f4 = ::Reflect_obj::makeVarArgs(f3);
HXLINE( 406)				if (hx::IsNotNull( name )) {
HXLINE( 407)					if ((this->depth == (int)0)) {
HXLINE( 409)						::haxe::IMap_obj::set(this->variables,name,f4);
            					}
            					else {
HXLINE( 412)						::Array< ::Dynamic> _hx_tmp1 = this->declared;
HXDLIN( 412)						 ::Dynamic _hx_tmp2 = ::haxe::IMap_obj::get(this->locals,name);
HXDLIN( 412)						_hx_tmp1->push( ::Dynamic(hx::Anon_obj::Create(2)
            							->setFixed(0,HX_("n",6e,00,00,00),name)
            							->setFixed(1,HX_("old",a7,98,54,00),_hx_tmp2)));
HXLINE( 413)						 ::Dynamic ref =  ::Dynamic(hx::Anon_obj::Create(1)
            							->setFixed(0,HX_("r",72,00,00,00),f4));
HXLINE( 414)						::haxe::IMap_obj::set(this->locals,name,ref);
HXLINE( 415)						capturedLocals->set(name,ref);
            					}
            				}
HXLINE( 418)				return f4;
            			}
            			break;
            			case (int)15: {
HXLINE( 348)				 ::hscript::Expr e13 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 349)				 ::Dynamic _hx_tmp3;
HXDLIN( 349)				if (hx::IsNull( e13 )) {
HXLINE( 349)					_hx_tmp3 = null();
            				}
            				else {
HXLINE( 349)					_hx_tmp3 = this->expr(e13);
            				}
HXDLIN( 349)				HX_STACK_DO_THROW(::hscript::_Interp::Stop_obj::SReturn(_hx_tmp3));
            			}
            			break;
            			case (int)16: {
HXLINE( 424)				 ::hscript::Expr index = e->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 424)				 ::hscript::Expr e14 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 425)				 ::Dynamic _hx_tmp4 = this->expr(e14);
HXDLIN( 425)				return _hx_tmp4->__GetItem(( (int)(this->expr(index)) ));
            			}
            			break;
            			case (int)17: {
HXLINE( 419)				::Array< ::Dynamic> arr = e->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 420)				::cpp::VirtualArray a = ::cpp::VirtualArray_obj::__new();
HXLINE( 421)				{
HXLINE( 421)					int _g5 = (int)0;
HXDLIN( 421)					while((_g5 < arr->length)){
HXLINE( 421)						 ::hscript::Expr e15 = arr->__get(_g5).StaticCast<  ::hscript::Expr >();
HXDLIN( 421)						_g5 = (_g5 + (int)1);
HXLINE( 422)						a->push(this->expr(e15));
            					}
            				}
HXLINE( 423)				return a;
            			}
            			break;
            			case (int)18: {
HXLINE( 426)				::Array< ::Dynamic> params2 = e->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 426)				::String cl = e->_hx_getString(0);
HXLINE( 427)				::cpp::VirtualArray a1 = ::cpp::VirtualArray_obj::__new();
HXLINE( 428)				{
HXLINE( 428)					int _g6 = (int)0;
HXDLIN( 428)					while((_g6 < params2->length)){
HXLINE( 428)						 ::hscript::Expr e16 = params2->__get(_g6).StaticCast<  ::hscript::Expr >();
HXDLIN( 428)						_g6 = (_g6 + (int)1);
HXLINE( 429)						a1->push(this->expr(e16));
            					}
            				}
HXLINE( 430)				return this->cnew(cl,a1);
            			}
            			break;
            			case (int)19: {
HXLINE( 431)				 ::hscript::Expr e17 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 432)				HX_STACK_DO_THROW(this->expr(e17));
            			}
            			break;
            			case (int)20: {
HXLINE( 433)				 ::hscript::Expr ecatch = e->_hx_getObject(3).StaticCast<  ::hscript::Expr >();
HXDLIN( 433)				::String n1 = e->_hx_getString(1);
HXDLIN( 433)				 ::hscript::Expr e18 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 434)				int old2 = this->declared->length;
HXLINE( 435)				bool oldTry = this->inTry;
HXLINE( 436)				try {
            					HX_STACK_CATCHABLE( ::hscript::_Interp::Stop, 0);
            					HX_STACK_CATCHABLE( ::Dynamic, 1);
HXLINE( 437)					this->inTry = true;
HXLINE( 438)					 ::Dynamic v3 = this->expr(e18);
HXLINE( 439)					this->restore(old2);
HXLINE( 440)					this->inTry = oldTry;
HXLINE( 441)					return v3;
            				}
            				catch( ::Dynamic _hx_e){
            					if (_hx_e.IsClass<  ::hscript::_Interp::Stop >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::hscript::_Interp::Stop err = _hx_e;
HXLINE( 443)						this->inTry = oldTry;
HXLINE( 444)						HX_STACK_DO_THROW(err);
            					}
            					else if (_hx_e.IsClass<  ::Dynamic >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::Dynamic err1 = _hx_e;
HXLINE( 447)						this->restore(old2);
HXLINE( 448)						this->inTry = oldTry;
HXLINE( 450)						::Array< ::Dynamic> _hx_tmp5 = this->declared;
HXDLIN( 450)						_hx_tmp5->push( ::Dynamic(hx::Anon_obj::Create(2)
            							->setFixed(0,HX_("n",6e,00,00,00),n1)
            							->setFixed(1,HX_("old",a7,98,54,00),::haxe::IMap_obj::get(this->locals,n1))));
HXLINE( 451)						::haxe::IMap_obj::set(this->locals,n1, ::Dynamic(hx::Anon_obj::Create(1)
            							->setFixed(0,HX_("r",72,00,00,00),err1)));
HXLINE( 452)						 ::Dynamic v4 = this->expr(ecatch);
HXLINE( 453)						this->restore(old2);
HXLINE( 454)						return v4;
            					}
            					else {
            						HX_STACK_DO_THROW(_hx_e);
            					}
            				}
            			}
            			break;
            			case (int)21: {
HXLINE( 456)				::Array< ::Dynamic> fl = e->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 457)				 ::Dynamic o =  ::Dynamic(hx::Anon_obj::Create(0));
HXLINE( 458)				{
HXLINE( 458)					int _g7 = (int)0;
HXDLIN( 458)					while((_g7 < fl->length)){
HXLINE( 458)						 ::Dynamic f5 = fl->__get(_g7);
HXDLIN( 458)						_g7 = (_g7 + (int)1);
HXLINE( 459)						::String f6 = ( (::String)(f5->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) );
HXDLIN( 459)						this->set(o,f6,this->expr(f5->__Field(HX_("e",65,00,00,00),hx::paccDynamic)));
            					}
            				}
HXLINE( 460)				return o;
            			}
            			break;
            			case (int)22: {
HXLINE( 461)				 ::hscript::Expr e23 = e->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
HXDLIN( 461)				 ::hscript::Expr e19 = e->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
HXDLIN( 461)				 ::hscript::Expr econd2 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 462)				if (hx::IsEq( this->expr(econd2),true )) {
HXLINE( 462)					return this->expr(e19);
            				}
            				else {
HXLINE( 462)					return this->expr(e23);
            				}
            			}
            			break;
            			case (int)23: {
HXLINE( 463)				 ::hscript::Expr def = e->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
HXDLIN( 463)				::Array< ::Dynamic> cases = e->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 463)				 ::hscript::Expr e20 = e->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
HXLINE( 464)				 ::Dynamic val = this->expr(e20);
HXLINE( 465)				bool match = false;
HXLINE( 466)				{
HXLINE( 466)					int _g8 = (int)0;
HXDLIN( 466)					while((_g8 < cases->length)){
HXLINE( 466)						 ::Dynamic c1 = cases->__get(_g8);
HXDLIN( 466)						_g8 = (_g8 + (int)1);
HXLINE( 467)						{
HXLINE( 467)							int _g12 = (int)0;
HXDLIN( 467)							::Array< ::Dynamic> _g21 = ( (::Array< ::Dynamic>)(c1->__Field(HX_("values",e2,03,b7,4f),hx::paccDynamic)) );
HXDLIN( 467)							while((_g12 < _g21->length)){
HXLINE( 467)								 ::hscript::Expr v5 = _g21->__get(_g12).StaticCast<  ::hscript::Expr >();
HXDLIN( 467)								_g12 = (_g12 + (int)1);
HXLINE( 468)								if (hx::IsEq( this->expr(v5),val )) {
HXLINE( 469)									match = true;
HXLINE( 470)									goto _hx_goto_58;
            								}
            							}
            							_hx_goto_58:;
            						}
HXLINE( 472)						if (match) {
HXLINE( 473)							val = this->expr(c1->__Field(HX_("expr",35,fd,1d,43),hx::paccDynamic));
HXLINE( 474)							goto _hx_goto_57;
            						}
            					}
            					_hx_goto_57:;
            				}
HXLINE( 477)				if (!(match)) {
HXLINE( 478)					if (hx::IsNull( def )) {
HXLINE( 478)						val = null();
            					}
            					else {
HXLINE( 478)						val = this->expr(def);
            					}
            				}
HXLINE( 479)				return val;
            			}
            			break;
            		}
HXLINE( 273)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,expr,return )

void Interp_obj::whileLoop( ::hscript::Expr econd, ::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_484_whileLoop)
HXLINE( 485)		int old = this->declared->length;
HXLINE( 486)		while(hx::IsEq( this->expr(econd),true )){
HXLINE( 487)			try {
            				HX_STACK_CATCHABLE( ::hscript::_Interp::Stop, 0);
HXLINE( 488)				this->expr(e);
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass<  ::hscript::_Interp::Stop >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::hscript::_Interp::Stop err = _hx_e;
HXLINE( 490)					switch((int)(_hx_getEnumValueIndex(err))){
            						case (int)0: {
HXLINE( 492)							goto _hx_goto_61;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 493)							HX_STACK_DO_THROW(err);
            						}
            						break;
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		_hx_goto_61:;
HXLINE( 497)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,whileLoop,(void))

 ::Dynamic Interp_obj::makeIterator( ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_500_makeIterator)
HXLINE( 504)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 504)			v = v->__Field(HX_("iterator",ee,49,9a,93),hx::paccDynamic)();
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 506)		bool _hx_tmp;
HXDLIN( 506)		if (hx::IsNotNull(  ::Dynamic(v->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)) )) {
HXLINE( 506)			_hx_tmp = hx::IsNull(  ::Dynamic(v->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)) );
            		}
            		else {
HXLINE( 506)			_hx_tmp = true;
            		}
HXDLIN( 506)		if (_hx_tmp) {
HXLINE( 506)			HX_STACK_DO_THROW(::hscript::Error_obj::EInvalidIterator(v));
            		}
HXLINE( 507)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,makeIterator,return )

void Interp_obj::forLoop(::String n, ::hscript::Expr it, ::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_510_forLoop)
HXLINE( 511)		int old = this->declared->length;
HXLINE( 512)		::Array< ::Dynamic> _hx_tmp = this->declared;
HXDLIN( 512)		_hx_tmp->push( ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("n",6e,00,00,00),n)
            			->setFixed(1,HX_("old",a7,98,54,00),this->locals->get(n))));
HXLINE( 513)		 ::Dynamic it1 = this->makeIterator(this->expr(it));
HXLINE( 514)		while(( (bool)(it1->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 515)			{
HXLINE( 515)				::Dynamic this1 = this->locals;
HXDLIN( 515)				( ( ::haxe::ds::StringMap)(this1) )->set(n, ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("r",72,00,00,00),it1->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)())));
            			}
HXLINE( 516)			try {
            				HX_STACK_CATCHABLE( ::hscript::_Interp::Stop, 0);
HXLINE( 517)				this->expr(e);
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass<  ::hscript::_Interp::Stop >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::hscript::_Interp::Stop err = _hx_e;
HXLINE( 519)					switch((int)(_hx_getEnumValueIndex(err))){
            						case (int)0: {
HXLINE( 521)							goto _hx_goto_64;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 522)							HX_STACK_DO_THROW(err);
            						}
            						break;
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		_hx_goto_64:;
HXLINE( 526)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,forLoop,(void))

 ::Dynamic Interp_obj::get( ::Dynamic o,::String f){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_529_get)
HXLINE( 530)		if (hx::IsNull( o )) {
HXLINE( 530)			HX_STACK_DO_THROW(::hscript::Error_obj::EInvalidAccess(f));
            		}
HXLINE( 539)		return ::Reflect_obj::getProperty(o,f);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,get,return )

 ::Dynamic Interp_obj::set( ::Dynamic o,::String f, ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_543_set)
HXLINE( 544)		if (hx::IsNull( o )) {
HXLINE( 544)			HX_STACK_DO_THROW(::hscript::Error_obj::EInvalidAccess(f));
            		}
HXLINE( 545)		::Reflect_obj::setProperty(o,f,v);
HXLINE( 546)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,set,return )

 ::Dynamic Interp_obj::fcall( ::Dynamic o,::String f,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_550_fcall)
HXLINE( 550)		return this->call(o,this->get(o,f),args);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,fcall,return )

 ::Dynamic Interp_obj::call( ::Dynamic o, ::Dynamic f,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_554_call)
HXLINE( 554)		return ::Reflect_obj::callMethod(o,f,args);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,call,return )

 ::Dynamic Interp_obj::cnew(::String cl,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_f37559d470356c9e_557_cnew)
HXLINE( 558)		hx::Class c = ::Type_obj::resolveClass(cl);
HXLINE( 559)		if (hx::IsNull( c )) {
HXLINE( 559)			c = this->resolve(cl);
            		}
HXLINE( 560)		return ::Type_obj::createInstance(c,args);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,cnew,return )


hx::ObjectPtr< Interp_obj > Interp_obj::__new() {
	hx::ObjectPtr< Interp_obj > __this = new Interp_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Interp_obj > Interp_obj::__alloc(hx::Ctx *_hx_ctx) {
	Interp_obj *__this = (Interp_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Interp_obj), true, "hscript.Interp"));
	*(void **)__this = Interp_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Interp_obj::Interp_obj()
{
}

void Interp_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Interp);
	HX_MARK_MEMBER_NAME(variables,"variables");
	HX_MARK_MEMBER_NAME(locals,"locals");
	HX_MARK_MEMBER_NAME(binops,"binops");
	HX_MARK_MEMBER_NAME(depth,"depth");
	HX_MARK_MEMBER_NAME(inTry,"inTry");
	HX_MARK_MEMBER_NAME(declared,"declared");
	HX_MARK_END_CLASS();
}

void Interp_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(variables,"variables");
	HX_VISIT_MEMBER_NAME(locals,"locals");
	HX_VISIT_MEMBER_NAME(binops,"binops");
	HX_VISIT_MEMBER_NAME(depth,"depth");
	HX_VISIT_MEMBER_NAME(inTry,"inTry");
	HX_VISIT_MEMBER_NAME(declared,"declared");
}

hx::Val Interp_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn()); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"edef") ) { return hx::Val( edef_dyn()); }
		if (HX_FIELD_EQ(inName,"expr") ) { return hx::Val( expr_dyn()); }
		if (HX_FIELD_EQ(inName,"call") ) { return hx::Val( call_dyn()); }
		if (HX_FIELD_EQ(inName,"cnew") ) { return hx::Val( cnew_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"depth") ) { return hx::Val( depth); }
		if (HX_FIELD_EQ(inName,"inTry") ) { return hx::Val( inTry); }
		if (HX_FIELD_EQ(inName,"error") ) { return hx::Val( error_dyn()); }
		if (HX_FIELD_EQ(inName,"fcall") ) { return hx::Val( fcall_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"locals") ) { return hx::Val( locals); }
		if (HX_FIELD_EQ(inName,"binops") ) { return hx::Val( binops); }
		if (HX_FIELD_EQ(inName,"assign") ) { return hx::Val( assign_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"initOps") ) { return hx::Val( initOps_dyn()); }
		if (HX_FIELD_EQ(inName,"execute") ) { return hx::Val( execute_dyn()); }
		if (HX_FIELD_EQ(inName,"restore") ) { return hx::Val( restore_dyn()); }
		if (HX_FIELD_EQ(inName,"resolve") ) { return hx::Val( resolve_dyn()); }
		if (HX_FIELD_EQ(inName,"forLoop") ) { return hx::Val( forLoop_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"declared") ) { return hx::Val( declared); }
		if (HX_FIELD_EQ(inName,"assignOp") ) { return hx::Val( assignOp_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"variables") ) { return hx::Val( variables); }
		if (HX_FIELD_EQ(inName,"increment") ) { return hx::Val( increment_dyn()); }
		if (HX_FIELD_EQ(inName,"duplicate") ) { return hx::Val( duplicate_dyn()); }
		if (HX_FIELD_EQ(inName,"whileLoop") ) { return hx::Val( whileLoop_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"exprReturn") ) { return hx::Val( exprReturn_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"evalAssignOp") ) { return hx::Val( evalAssignOp_dyn()); }
		if (HX_FIELD_EQ(inName,"makeIterator") ) { return hx::Val( makeIterator_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Interp_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"depth") ) { depth=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"inTry") ) { inTry=inValue.Cast< bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"locals") ) { locals=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"binops") ) { binops=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"declared") ) { declared=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"variables") ) { variables=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Interp_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("variables","\xb7","\xe2","\x62","\x82"));
	outFields->push(HX_HCSTRING("locals","\xa8","\x74","\xbf","\x59"));
	outFields->push(HX_HCSTRING("binops","\xcb","\x59","\x16","\xed"));
	outFields->push(HX_HCSTRING("depth","\x03","\xf1","\x29","\xd7"));
	outFields->push(HX_HCSTRING("inTry","\x56","\x82","\x08","\xbe"));
	outFields->push(HX_HCSTRING("declared","\xfa","\x58","\xbc","\xc4"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Interp_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Interp_obj,variables),HX_HCSTRING("variables","\xb7","\xe2","\x62","\x82")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Interp_obj,locals),HX_HCSTRING("locals","\xa8","\x74","\xbf","\x59")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Interp_obj,binops),HX_HCSTRING("binops","\xcb","\x59","\x16","\xed")},
	{hx::fsInt,(int)offsetof(Interp_obj,depth),HX_HCSTRING("depth","\x03","\xf1","\x29","\xd7")},
	{hx::fsBool,(int)offsetof(Interp_obj,inTry),HX_HCSTRING("inTry","\x56","\x82","\x08","\xbe")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Interp_obj,declared),HX_HCSTRING("declared","\xfa","\x58","\xbc","\xc4")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Interp_obj_sStaticStorageInfo = 0;
#endif

static ::String Interp_obj_sMemberFields[] = {
	HX_HCSTRING("variables","\xb7","\xe2","\x62","\x82"),
	HX_HCSTRING("locals","\xa8","\x74","\xbf","\x59"),
	HX_HCSTRING("binops","\xcb","\x59","\x16","\xed"),
	HX_HCSTRING("depth","\x03","\xf1","\x29","\xd7"),
	HX_HCSTRING("inTry","\x56","\x82","\x08","\xbe"),
	HX_HCSTRING("declared","\xfa","\x58","\xbc","\xc4"),
	HX_HCSTRING("initOps","\x02","\x63","\x8b","\xcb"),
	HX_HCSTRING("assign","\x2f","\x46","\x06","\x4c"),
	HX_HCSTRING("assignOp","\x30","\xb5","\xc7","\x0e"),
	HX_HCSTRING("evalAssignOp","\xec","\xd8","\x94","\x19"),
	HX_HCSTRING("increment","\x2f","\x06","\xff","\x31"),
	HX_HCSTRING("execute","\x35","\x0a","\x0d","\xcc"),
	HX_HCSTRING("exprReturn","\xc5","\x6b","\xed","\x86"),
	HX_HCSTRING("duplicate","\x8b","\x21","\x17","\xa1"),
	HX_HCSTRING("restore","\x4e","\x67","\xb0","\x6a"),
	HX_HCSTRING("edef","\x80","\xc6","\x0e","\x43"),
	HX_HCSTRING("error","\xc8","\xcb","\x29","\x73"),
	HX_HCSTRING("resolve","\xec","\x12","\x60","\x67"),
	HX_HCSTRING("expr","\x35","\xfd","\x1d","\x43"),
	HX_HCSTRING("whileLoop","\xb5","\x42","\x98","\xe1"),
	HX_HCSTRING("makeIterator","\xfc","\xdd","\x72","\xd8"),
	HX_HCSTRING("forLoop","\x0d","\x52","\x69","\xc9"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("fcall","\x04","\x44","\x99","\xfc"),
	HX_HCSTRING("call","\x9e","\x18","\xba","\x41"),
	HX_HCSTRING("cnew","\xdd","\xef","\xc3","\x41"),
	::String(null()) };

static void Interp_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Interp_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Interp_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Interp_obj::__mClass,"__mClass");
};

#endif

hx::Class Interp_obj::__mClass;

void Interp_obj::__register()
{
	hx::Object *dummy = new Interp_obj;
	Interp_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("hscript.Interp","\x8f","\x7c","\xf0","\x9a");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Interp_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Interp_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Interp_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Interp_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Interp_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Interp_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hscript
