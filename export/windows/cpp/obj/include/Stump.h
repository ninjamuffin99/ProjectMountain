// Generated by Haxe 3.4.0
#ifndef INCLUDED_Stump
#define INCLUDED_Stump

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
HX_DECLARE_CLASS0(Stump)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES Stump_obj : public  ::flixel::FlxSprite_obj
{
	public:
		typedef  ::flixel::FlxSprite_obj super;
		typedef Stump_obj OBJ_;
		Stump_obj();

	public:
		enum { _hx_ClassId = 0x17480cf7 };

		void __construct( ::Dynamic __o_X, ::Dynamic __o_Y, ::Dynamic SimpleGraphic);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Stump")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Stump"); }
		static hx::ObjectPtr< Stump_obj > __new( ::Dynamic __o_X, ::Dynamic __o_Y, ::Dynamic SimpleGraphic);
		static hx::ObjectPtr< Stump_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic __o_X, ::Dynamic __o_Y, ::Dynamic SimpleGraphic);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Stump_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Stump","\xf7","\x0c","\x48","\x17"); }

};


#endif /* INCLUDED_Stump */ 
