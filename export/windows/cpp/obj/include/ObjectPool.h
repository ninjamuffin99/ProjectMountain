// Generated by Haxe 3.4.0
#ifndef INCLUDED_ObjectPool
#define INCLUDED_ObjectPool

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(ObjectPool)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES ObjectPool_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ObjectPool_obj OBJ_;
		ObjectPool_obj();

	public:
		enum { _hx_ClassId = 0x1a27e0bf };

		void __construct(int tile_width,int tile_height,::String tileMap,hx::Null< int >  __o_len,hx::Null< bool >  __o_Solid);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ObjectPool")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"ObjectPool"); }
		static hx::ObjectPtr< ObjectPool_obj > __new(int tile_width,int tile_height,::String tileMap,hx::Null< int >  __o_len,hx::Null< bool >  __o_Solid);
		static hx::ObjectPtr< ObjectPool_obj > __alloc(hx::Ctx *_hx_ctx,int tile_width,int tile_height,::String tileMap,hx::Null< int >  __o_len,hx::Null< bool >  __o_Solid);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ObjectPool_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ObjectPool","\x5b","\xfb","\x45","\xc3"); }

		int TILE_WIDTH;
		int TILE_HEIGHT;
		::String _tileMap;
		::Array< ::Dynamic> _pool;
		bool _solid;
		int counter;
		int size;
		 ::flixel::FlxSprite getObj();
		::Dynamic getObj_dyn();

		void returnObj( ::flixel::FlxSprite s);
		::Dynamic returnObj_dyn();

		void loadPool();
		::Dynamic loadPool_dyn();

};


#endif /* INCLUDED_ObjectPool */ 
