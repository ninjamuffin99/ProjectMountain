// Generated by Haxe 3.4.0
#ifndef INCLUDED_GameClass
#define INCLUDED_GameClass

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
HX_DECLARE_CLASS0(GameClass)
HX_DECLARE_CLASS1(flixel,FlxGame)
HX_DECLARE_CLASS3(openfl,_legacy,display,DisplayObject)
HX_DECLARE_CLASS3(openfl,_legacy,display,DisplayObjectContainer)
HX_DECLARE_CLASS3(openfl,_legacy,display,IBitmapDrawable)
HX_DECLARE_CLASS3(openfl,_legacy,display,InteractiveObject)
HX_DECLARE_CLASS3(openfl,_legacy,display,Sprite)
HX_DECLARE_CLASS3(openfl,_legacy,events,EventDispatcher)
HX_DECLARE_CLASS3(openfl,_legacy,events,IEventDispatcher)



class HXCPP_CLASS_ATTRIBUTES GameClass_obj : public  ::flixel::FlxGame_obj
{
	public:
		typedef  ::flixel::FlxGame_obj super;
		typedef GameClass_obj OBJ_;
		GameClass_obj();

	public:
		enum { _hx_ClassId = 0x1f4646c6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="GameClass")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"GameClass"); }
		static hx::ObjectPtr< GameClass_obj > __new();
		static hx::ObjectPtr< GameClass_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GameClass_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("GameClass","\xc6","\x46","\x46","\x1f"); }

};


#endif /* INCLUDED_GameClass */ 
